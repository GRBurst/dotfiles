# Git
alias g="git"
alias got='git ot && cd /tmp/wust'
alias grsc='git rebase -i $(git-select-commit)^'

# Dotfiles
# which yadm > /dev/null && alias     d='yadm --yadm-repo $HOME/projects/dotfiles         -c core.excludesfile=~/.gitignore-dotfiles'
# which yadm > /dev/null && alias    dp='yadm --yadm-repo $HOME/projects/dotfiles-private -c core.excludesfile=~/.gitignore-dotfiles-private'
DOTFILES_GIT="GIT_DIR=$HOME/projects/dotfiles GIT_WORK_TREE=$HOME"
DOTFILES_PRIVATE_GIT="GIT_DIR=$HOME/projects/dotfiles-private GIT_WORK_TREE=$HOME"
DOTFILES_TIG="TIGRC_USER=$HOME/.config/tig/config-dotfiles $DOTFILES_GIT"
alias d="$DOTFILES_GIT git -c core.excludesfile=~/.gitignore-dotfiles"
alias dp="$DOTFILES_PRIVATE_GIT git -c core.excludesfile=~/.gitignore-dotfiles-private"
alias tigd="$DOTFILES_TIG tig"
alias meldd="$DOTFILES_GIT meld"
alias tigdp="$DOTFILES_PRIVATE_GIT tig"
vd() {(cd; eval $DOTFILES_GIT vim -c GitFiles);}

# vim configs
alias vim="nvim"
alias vi3="vim ~/.config/i3/config"
alias vnpc="vim ~/.config/nixpkgs/config.nix"
alias vssh="vim ~/.ssh/config"

# Dev
alias m='make'
alias mc='make clean'
alias cg="cargo"
alias scala='scala -Dscala.color -deprecation -unchecked -explaintypes -language:_'
alias jsb='underscore print --color --outfmt json' # beautify json, package: npm -g install underscore-cli
alias wn='cd ~/projects/woost/wust2 && nix-shell --command "zsh"'
alias ws='cd ~/projects/woost/wust2 && ./start nsbt'
alias rmt='cdg; rm -r **/target **/.*/**/target'
# alias rwu='cd ~/projects/woost/wust2; ./start nsbt'
swu() {
    cd ~/projects/woost/wust2
    ./start "$@"
}

# Colors
alias ssh='TERM=xterm-256color ssh'
alias l='ls -l --color=auto'
alias ls='ls --group-directories-first --color=auto -h'
alias la='ls -lah --color=auto'
alias lh='ls -hAl --color=auto'
alias ll='ls -l --color=auto'
alias lt='ls -ltr'

# cd
alias cdd='cd ~/downloads'
alias cdp='cd ~/projects'
alias cd.='cd ~/projects/dotfiles'
alias cdt='cd-tmp'
alias cdg='cd-git-root'
alias cdnpc='cd ~/.config/nixpkgs'
alias cdi3='cd ~/.config/i3'
alias pp='cd ~/projects/$(ls -t ~/projects | head -1)'
alias vm='vim $(git-select-dirty-files)'
p() { cd ~/projects/"$(ls -t ~/projects | fzf --query="$(echo $@ | tr ' ' '\ ' )")";}

# file listing/interaction
alias df='df -h'
alias md='mkdir -p'
alias mdcd='mkdir-cd'
alias mvi='interactive-mv'
alias mcp='noglob zmv -C -W'
alias mln='noglob zmv -L -W'
alias mmv='noglob zmv -W'
#o() { gio open $@ > /dev/null 2>&1; } # gio not availabe in nixos
# o() { xdg-open $@ > /dev/null 2>&1; }
o() { mimeo $@ > /dev/null 2>&1; }

alias rcp="rsync --append-verify --archive --compress --human-readable --info=progress2 --partial --sparse"
alias ssh-tmate="ssh -o PreferredAuthentications=password -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# Nix
alias ns='nix-shell --command "zsh"'

# Tools
alias t="tree -C"
alias ta="tree -a"
alias f="find"
alias fif="find-in-file"
alias dsize="sudo du -hsx ./* | sort -rh | head -n 40"
alias local-update="nix-env -iA userPackages -f '<nixpkgs>'"

# Raid
raid_health() {
    cat /proc/mdstat
    sudo mdadm -D /dev/md0
}

raid_check() {
    sudo bash -c 'echo 400000 >/proc/sys/dev/raid/speed_limit_min'
    sudo bash -c 'echo 400000 >/proc/sys/dev/raid/speed_limit_max'
    sudo bash -c 'echo check > /sys/block/md0/md/sync_action'
}

raid_watch() {
    watch -t 'cat /proc/mdstat'
}

# vim
alias se="sudoedit"
alias vimt='vim $(date +"%Y-%m-%d")'
v() {
    (
        cd-git-root > /dev/null
        file="$(fzf --query="$(echo $@ | tr ' ' '\ ' )")"
        [[ -n $file ]] && vim "$file"
    );
}
# v() { echo $@ | vim -c Rooter -c Files }
vr() { vim -c "History $*"; }
vt() { vim -c "Tags $*"; }

# alias vim="vim --servername vim-$$" # always start vim as server (for live colorscheme changing, working differently for neovim)
nvim_command() {
    # usage: nvim_command <socket> <command>
    # requires: https://github.com/jakm/msgpack-cli

    # https://github.com/msgpack-rpc/msgpack-rpc/blob/master/spec.md
    # msgpack-rpc is an array of [type, msgid, method, params]
    # encode and send it to nvims unix socket via netcat
    msgpack-cli encode <(echo "[0,0,\"vim_command\",[\"$2\"]]") | netcat -U $1
}

nvim_all_command() {
    # usage: nvim_all_command <command>
    for nvim in /tmp/nvim*/0; do
        nvim_command $nvim "$1"
    done
}

x() {
    (nohup $@ > /tmp/$1_$2.log) &
}

xx() {
    $@ &
    disown
    exit
}

cgw() {
    cargo $1
    cargo watch $1
}

sbt() { (
    # TODO: search tree upwards for build.sbt
    if [ ! -f build.sbt ]; then
        cd-git-root
    fi
    env sbt $@
    )
}

# i3
alias i3-update-conf="cat $HOME/.config/i3/common/config > $HOME/.config/i3/config; cat $HOME/.config/i3/local/config* >> $HOME/.config/i3/config; i3-msg reload;"


# Projects
sshkeygen() {
    ssh-keygen -t ed25519 -C "$(whoami)@$(hostname)->$1 on $(date -I)" -f "$HOME/.ssh/$(hostname)->$1"
}
sshkeygen_legacy() {
    ssh-keygen -t rsa -b 4096 -C "$(whoami)@$(hostname)->$1 on $(date -I)" -f "$HOME/.ssh/$(hostname)->$1_legacy"
}
mdot() {
    local n=$(basename "$1")
    dot -Tsvg $1 -o /tmp/$n.svg; atril -s /tmp/$n.svg
}
proj_ctags () {
    cd-git-root
    dir=$(realpath .)
    touch $dir/tags
    ctags --fields=+l --c-kinds=+p --c++-kinds=+p -f $dir/tags -R $dir
}

# General
alias ateamsmb="cd /tmp && smbclient //ateam/upload -U nobody -N -W FOO"
ateam-mount() {
    sudo mount -t cifs //ateam/ateam /media/ateam/ateam -o guest,uid=$(id -u),gid=$(id -g),ro
    sudo mount -t cifs //ateam/upload /media/ateam/upload -o guest,uid=$(id -u),gid=$(id -g),rw
}
ateam-umount() {
    sudo umount /media/ateam/upload
    sudo umount /media/ateam/ateam
}
tmpremount() {
    sudo mount -o remount,size="$1",noatime /tmp
}
nix-update() {
    nix-env -iA highres-packages -f "<nixpkgs>"
}
nixos-details() {
    printf '- System: '
    nixos-version
    printf '- Nix version: '
    nix-env --version
    printf '- Nixpkgs version: '
    nix-instantiate --eval '<nixpkgs>' -A lib.nixpkgsVersion
    printf '- Sandboxing enabled: '
    grep build-use-sandbox /etc/nix/nix.conf | sed s/.*=//
}

sylvester-payments() {
local days=30
local entries=31
if [[ "$#" -eq 1 ]]; then
    entries=$((${1}+1))
fi
local result=$(ssh sylvester "dumpykota --data payments start=today-${days} end=now | sort -k 3 -t ',' | tail -n ${entries}")
echo ${result} | tail -n 1
echo ${result}
# for value in "${result[@]}"; do
#     printf "%-8s\n" "${value}"
# done | column
}

search_replace() {
    ag "$1" -l0 | xargs -0 sed -i "s/$1/$2/g"
}

# Internet and Wlan
alias inet="ping -q -w 1 -c 1 google.com > /dev/null && echo online || echo offline"
alias won='nmcli radio wifi on; wscan'
alias woff='nmcli radio wifi off'
alias wscan='nmcli dev wifi rescan > /dev/null 2>&1; true'
alias wlist='nmcli dev wifi list'
alias wcon='nmcli dev wifi connect'

# services & daemons
alias tv="sudo systemctl start teamviewerd.service && teamviewer"

# monitor
alias rhdmi="xrandr --output eDP1 --primary --auto --output HDMI2 --right-of eDP1 --auto"
alias hdmi="xrandr --output eDP1 --off --output HDMI2 --auto"
alias edp="xrandr --output eDP1 --primary --auto --output HDMI2 --off"
# vim: ft=sh
